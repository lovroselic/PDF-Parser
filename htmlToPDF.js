/*jshint browser: true */
/*jshint -W097 */
/*jshint -W117 */
/*jshint -W061 */
"use strict";

/** IIFE */
(() => {

    /** globals  */
    const INI = {
        WIDTH: 192,
        LEFT: 10,
        TOP: 10,
        VERSION: "0.08",
        TITLE: "",
        AUTHOR: "",
        CREATOR: "",
        SUBJECT: "",
        KEYWORDS: "",
        FOOTER_FONT_SIZE: 8,
        LINE_Y_OFFSET: 13,
    };

    const __leftClass__ = `col-sm-${6}`;
    const __righClass__ = `col-sm-${6}`;

    /** functions */

    async function renderPageToPDF(doc, page, imgWidth) {
        try {
            const canvas = await html2canvas(page, { logging: false });
            const imgHeight = (canvas.height * imgWidth) / canvas.width;
            const imgData = canvas.toDataURL('image/png');
            doc.addImage(imgData, 'PNG', INI.LEFT, INI.TOP, imgWidth, imgHeight, '', 'FAST');
        } catch (error) {
            console.error("Error rendering page to PDF:", error);
        }
    }

    function pageFooter(doc, page, totalPages) {
        doc.text(`Page: ${page}/${totalPages}; generated by tralala hopsasa`, 10, doc.internal.pageSize.height - 10);
    }

    function pageLine(doc) {
        const linePosY = doc.internal.pageSize.height - INI.LINE_Y_OFFSET;
        doc.line(INI.LEFT, linePosY, INI.WIDTH, linePosY, 'S');
    }

    async function createPDF() {
        try {
            const filename = $("#fn")[0].value || 'document.pdf';
            const doc = new window.jspdf.jsPDF('p', 'mm');
            doc.setFont("times", "normal");
            doc.setFontSize(INI.FOOTER_FONT_SIZE);
            doc.setProperties({ title: INI.TITLE, subject: INI.SUBJECT, author: INI.AUTHOR, keywords: INI.KEYWORDS, creator: INI.CREATOR });

            const imgWidth = INI.WIDTH;
            const pages = $('div[id^="page-"]');                            // Select all divs with id starting with "page-"

            for (let i = 0; i < pages.length; i++) {
                if (i > 0) doc.addPage();
                await renderPageToPDF(doc, pages[i], imgWidth);
                pageLine(doc);
                pageFooter(doc, i + 1, pages.length);
            }

            doc.save(filename);
        } catch (error) {
            console.error("Error creating PDF:", error);
        }
    }

    function schoolYear() {
        const date = new Date();
        let year = date.getFullYear();
        if (date.getMonth() <= 8) year--;
        return `${year}/${String(year + 1).slice(2)}`;
    }

    function today() {
        var today = new Date();
        var dd = String(today.getDate()).padStart(2, '0');
        var mm = String(today.getMonth() + 1).padStart(2, '0');
        var yyyy = today.getFullYear();
        return yyyy + '-' + mm + '-' + dd;
    }

    function stringToUnderscoredString(string) {
        return string.replace(/ /g, '_');
    }

    function add_checklist(checklist) {
        let element = `<form>`;
        for (const check of checklist) {
            const id = stringToUnderscoredString(check);
            element += `<input type="checkbox" id=${id} name=${id} value="${check}">`;
            element += `<label for=${id}>&nbsp; ${check}</label><br>`;
        }
        element += "</form>";
        return element;
    }

    function goal_checkList(goal, checklist) {
        const id = stringToUnderscoredString(goal);
        let element = `<div class="row mb-3 id="${id}"><p class="fw-bold">${goal}</p>`;
        element += `<div class= "${__leftClass__}">`;
        element += add_checklist(checklist);
        element += "</div>";
        element += `<div class= "${__righClass__}">`;
        element += `<textarea class="form-control" style="height: 100%;resize: none;" placeholder="activity ..."></textarea>`;
        element += "</div>";
        element += "</div>";
        return element;
    }

    function metric(chapter) {
        /**  metric html elements*/
        const pupil_metric = `
        <div class="row mb-3">
            <div class= "${__leftClass__}">
                <p>Ozaveščanje svojega znanja: tri stopenjska metrika</p> 
                <p>Znam / lahko še izpopolnim / moram še vaditi </p>
            </div>
            <div class= "${__righClass__}">
                <textarea class="form-control" style="height: 100%;resize: none;" placeholder="opis metrike ..."></textarea>
            </div>
        </div>
        `;

        const teacher_metric1 = `
        <div class="row mb-3">
            <div class= "${__leftClass__}">
                <p>Kako podajam navodila?</p> 
                <p>Kako pripovedujem?</p>
                <p>Učenci sledijo, prehitro podajanje, premalo korakov pri postopnosti izvajanja.</p>
            </div>
            <div class= "${__righClass__}">
                <textarea class="form-control" style="height: 100%;resize: none;" placeholder="komentar izboljšanja  ..."></textarea>
            </div>
        </div>
        `;


        const teacher_metric2 = `
        <div class="row mb-3">
            <div class= "${__leftClass__}">
                <p>Kako podam povratno informacjo učencu?</p> 
                <p>Ne podam; popravim napako, tako da poudarim pravilnost izvedbe.</p>
                <p>Povprašam ali je prepričan da je odgovor pravilen, otrok utemelji (pogovor). </p>
            </div>
            <div class= "${__righClass__}">
                <textarea class="form-control" style="height: 100%;resize: none;" placeholder="komentar izboljšanja  ..."></textarea>
            </div>
        </div>
        `;

        /** end */

        let element = "";
        element += `<h4 class="my-4">${chapter}.1 Učenec</h4>` + pupil_metric;
        element += `<h4 class="my-4">${chapter}.2 Učitelj</h4>` + teacher_metric1 + teacher_metric2;

        return element;
    }

    function formativnoSpremljanje(page, chapter) {
        $(page).append(`<h3 class="my-4">${chapter} Formativno spremljanje</h3>`);
        $(page).append(metric(chapter));
    }

    function oblikaDela(page, chapter) {
        const checklist = ["Individualno delo", "Frontalno", "Delo po skupinah", "Sodelovalno učenje", "Kreativno iskanje rešitev", "Skupinska predstavitev dela", "samostojna predstavitev dela"];
        $(page).append(`<h3 class="my-4">${chapter} Oblika dela</h3>`);
        $(page).append(goal_checkList("", checklist));
    }

    function socializacija() {
        const cilji = ["POZDRAV", "SOCIALNE VEŠČINE", "FOKUS-KONCENTRACIJA", "KOMUNIKACIJA"];
        const checklist = ["Funkcioniranje v skupini", "Sledenje in upoštevanje navodil", "Sprejemanje (očesni kontakt, dotik)", "Potrpežljivost",
            "Orientacija v prostoru", "Kontrola lastnega telesa - motorika", "Urjenje koncentracije", "Navajanje na skupinsko delo"];

        for (const goal of cilji) {
            const element = goal_checkList(goal, checklist);
            $("#page-2").append(element);
        }
    }

    function jezik() {
        const cilji = ["POSLUŠANJE", "GOVOR", "BRANJE", "PISANJE"];
        const checklist = [
            ["Razumevanje navodil - verbalni odziv", "Razumevanje navodil - neverbalni odziv"],
            ["Ponavljanje rim, besedišča", "Odgovori na vprašanja, možnost izbire odgovora", "Sodelovanje v pogovoru (skupinsko delo)"],
            ["Piktogrami", "Ilustracije", "Učenčev doodle"],
            ["Opis slike (doodla)", "Vstavljanje manjkajočih besed", "Vizualna zgodba", "Vizualne povedi"]
        ];

        for (const [index, goal] of cilji.entries()) {
            const element = goal_checkList(goal, checklist[index]);
            console.log("element", element);
            $("#page-3").append(element);
        }

        formativnoSpremljanje("#page-3", "1.3");
        oblikaDela("#page-3", "1.4");
    }



    /** main */

    function build() {

        /**
        * building pages
        */

        socializacija();
        jezik();
    }

    function htmlToPDF() {
        console.clear();
        console.log(`HTML document to PDF V${INI.VERSION} (LS) running.`);
        $('#export-pdf-btn').on('click', createPDF);
        $("#solskoleto").val(schoolYear());
        $("#datum").val(today());
        build();

    }

    $(htmlToPDF);

})();